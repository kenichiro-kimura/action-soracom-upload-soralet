/**
 * SORACOM API
 * SORACOM API v1
 *
 * The version of the OpenAPI document: 20230427-035008
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { SoraletDataSource } from './soraletDataSource';

export class ExecuteSoraletRequest {
    'contentType': string;
    'direction': ExecuteSoraletRequest.DirectionEnum;
    'encodingType'?: ExecuteSoraletRequest.EncodingTypeEnum;
    'payload': string;
    'source': { [key: string]: SoraletDataSource; };
    'userdata'?: string;
    'version': string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "contentType",
            "baseName": "contentType",
            "type": "string"
        },
        {
            "name": "direction",
            "baseName": "direction",
            "type": "ExecuteSoraletRequest.DirectionEnum"
        },
        {
            "name": "encodingType",
            "baseName": "encodingType",
            "type": "ExecuteSoraletRequest.EncodingTypeEnum"
        },
        {
            "name": "payload",
            "baseName": "payload",
            "type": "string"
        },
        {
            "name": "source",
            "baseName": "source",
            "type": "{ [key: string]: SoraletDataSource; }"
        },
        {
            "name": "userdata",
            "baseName": "userdata",
            "type": "string"
        },
        {
            "name": "version",
            "baseName": "version",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return ExecuteSoraletRequest.attributeTypeMap;
    }
}

export namespace ExecuteSoraletRequest {
    export enum DirectionEnum {
        Uplink = <any> 'uplink',
        Downlink = <any> 'downlink'
    }
    export enum EncodingTypeEnum {
        Text = <any> 'text',
        Binary = <any> 'binary'
    }
}
