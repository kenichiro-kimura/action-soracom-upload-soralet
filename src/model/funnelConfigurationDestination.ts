/**
 * SORACOM API
 * SORACOM API v1
 *
 * The version of the OpenAPI document: 20230427-035008
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { FunnelAWSFirehoseDestination } from './funnelAWSFirehoseDestination';
import { FunnelAWSIoTDestination } from './funnelAWSIoTDestination';
import { FunnelAWSKinesisDestination } from './funnelAWSKinesisDestination';
import { FunnelAcroquestTorrentioDestination } from './funnelAcroquestTorrentioDestination';
import { FunnelAppressoDataSpiderDestination } from './funnelAppressoDataSpiderDestination';
import { FunnelAzureEventHubDestination } from './funnelAzureEventHubDestination';
import { FunnelBrainsTechImpulseDestination } from './funnelBrainsTechImpulseDestination';
import { FunnelDestination } from './funnelDestination';
import { FunnelEsrijArcgisOnlineDestination } from './funnelEsrijArcgisOnlineDestination';
import { FunnelFusicMockmockDatarecorderDestination } from './funnelFusicMockmockDatarecorderDestination';
import { FunnelGooglePubSubDestination } from './funnelGooglePubSubDestination';
import { FunnelInfoteriaPlatioDestination } from './funnelInfoteriaPlatioDestination';
import { FunnelKiiThingifDestination } from './funnelKiiThingifDestination';
import { FunnelLandlogDestination } from './funnelLandlogDestination';
import { FunnelOptimCloudiotosDestination } from './funnelOptimCloudiotosDestination';
import { FunnelSensorCorpusDestination } from './funnelSensorCorpusDestination';
import { FunnelTeradataIntellicloudDestination } from './funnelTeradataIntellicloudDestination';
import { FunnelWingarcMotionboardDestination } from './funnelWingarcMotionboardDestination';
import { FunnelYaskawaMmcloudDestination } from './funnelYaskawaMmcloudDestination';

export class FunnelConfigurationDestination {
    'provider'?: FunnelConfigurationDestination.ProviderEnum;
    'resourceUrl'?: string;
    'service'?: FunnelConfigurationDestination.ServiceEnum;
    'randomizePartitionKey'?: boolean;
    'endpointId'?: string;
    'tenantId'?: string;
    'config'?: string;
    'applicationId'?: string;
    'collectionId'?: string;
    'passAll'?: boolean;
    'values'?: string;
    'channelId'?: string;
    'dataFormat'?: string;
    'desthost'?: string;
    'destport'?: number;
    'additionalData'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "provider",
            "baseName": "provider",
            "type": "FunnelConfigurationDestination.ProviderEnum"
        },
        {
            "name": "resourceUrl",
            "baseName": "resourceUrl",
            "type": "string"
        },
        {
            "name": "service",
            "baseName": "service",
            "type": "FunnelConfigurationDestination.ServiceEnum"
        },
        {
            "name": "randomizePartitionKey",
            "baseName": "randomizePartitionKey",
            "type": "boolean"
        },
        {
            "name": "endpointId",
            "baseName": "endpointId",
            "type": "string"
        },
        {
            "name": "tenantId",
            "baseName": "tenantId",
            "type": "string"
        },
        {
            "name": "config",
            "baseName": "config",
            "type": "string"
        },
        {
            "name": "applicationId",
            "baseName": "applicationId",
            "type": "string"
        },
        {
            "name": "collectionId",
            "baseName": "collectionId",
            "type": "string"
        },
        {
            "name": "passAll",
            "baseName": "passAll",
            "type": "boolean"
        },
        {
            "name": "values",
            "baseName": "values",
            "type": "string"
        },
        {
            "name": "channelId",
            "baseName": "channel_id",
            "type": "string"
        },
        {
            "name": "dataFormat",
            "baseName": "data_format",
            "type": "string"
        },
        {
            "name": "desthost",
            "baseName": "desthost",
            "type": "string"
        },
        {
            "name": "destport",
            "baseName": "destport",
            "type": "number"
        },
        {
            "name": "additionalData",
            "baseName": "additionalData",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return FunnelConfigurationDestination.attributeTypeMap;
    }
}

export namespace FunnelConfigurationDestination {
    export enum ProviderEnum {
        Infocorpus = <any> 'infocorpus'
    }
    export enum ServiceEnum {
        Sensorcorpus = <any> 'sensorcorpus'
    }
}
