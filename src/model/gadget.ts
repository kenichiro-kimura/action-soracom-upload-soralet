/**
 * SORACOM API
 * SORACOM API v1
 *
 * The version of the OpenAPI document: 20230427-035008
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { GadgetAttributes } from './gadgetAttributes';
import { GadgetLastSeen } from './gadgetLastSeen';

export class Gadget {
    'attributes'?: GadgetAttributes;
    /**
    * Gadget API 対応デバイスを登録した UNIX 時間 (ミリ秒)
    */
    'createdTime'?: number;
    /**
    * Gadget API 対応デバイスの ID
    */
    'id'?: string;
    /**
    * Gadget API 対応デバイスの情報が変更された UNIX 時間 (ミリ秒)
    */
    'lastModifiedTime'?: number;
    'lastSeen'?: GadgetLastSeen;
    /**
    * Gadget API 対応デバイスを登録したオペレーター ID
    */
    'operatorId'?: string;
    /**
    * Gadget API 対応デバイスのタイプ  - `button`: SORACOM LTE-M Button powered by AWS - `wimax`: ソラカメ専用セルラーパック 
    */
    'productId'?: Gadget.ProductIdEnum;
    /**
    * Gadget API 対応デバイスのシリアル番号
    */
    'serialNumber'?: string;
    /**
    * Gadget API 対応デバイスの契約状態  - `active`: 契約中 - `terminated`: 解約済み 
    */
    'status'?: Gadget.StatusEnum;
    /**
    * タグ
    */
    'tags'?: { [key: string]: string; };
    /**
    * Gadget API 対応デバイスの解約日時。解約していない場合は `null` です。
    */
    'terminatedTime'?: number;
    /**
    * Gadget API 対応デバイスの解約プロテクション  - `true`: OFF (解約できる) - `false`: ON (解約できない) 
    */
    'terminationEnabled'?: boolean = false;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "attributes",
            "baseName": "attributes",
            "type": "GadgetAttributes"
        },
        {
            "name": "createdTime",
            "baseName": "createdTime",
            "type": "number"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "lastModifiedTime",
            "baseName": "lastModifiedTime",
            "type": "number"
        },
        {
            "name": "lastSeen",
            "baseName": "lastSeen",
            "type": "GadgetLastSeen"
        },
        {
            "name": "operatorId",
            "baseName": "operatorId",
            "type": "string"
        },
        {
            "name": "productId",
            "baseName": "productId",
            "type": "Gadget.ProductIdEnum"
        },
        {
            "name": "serialNumber",
            "baseName": "serialNumber",
            "type": "string"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "Gadget.StatusEnum"
        },
        {
            "name": "tags",
            "baseName": "tags",
            "type": "{ [key: string]: string; }"
        },
        {
            "name": "terminatedTime",
            "baseName": "terminatedTime",
            "type": "number"
        },
        {
            "name": "terminationEnabled",
            "baseName": "terminationEnabled",
            "type": "boolean"
        }    ];

    static getAttributeTypeMap() {
        return Gadget.attributeTypeMap;
    }
}

export namespace Gadget {
    export enum ProductIdEnum {
        Button = <any> 'button',
        Wimax = <any> 'wimax'
    }
    export enum StatusEnum {
        Active = <any> 'active',
        Terminated = <any> 'terminated'
    }
}
