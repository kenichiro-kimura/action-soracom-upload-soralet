/**
 * SORACOM API
 * SORACOM API v1
 *
 * The version of the OpenAPI document: 20230427-035008
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { PriceByQuantity } from './priceByQuantity';

/**
* Product
*/
export class ProductModel {
    /**
    * キャンペーンコード
    */
    'campaignCode'?: string;
    /**
    * 委託者 ID
    */
    'consignorId'?: string;
    /**
    * 委託者名
    */
    'consignorName'?: string;
    /**
    * 入数
    */
    'count'?: number;
    /**
    * 通貨
    */
    'currency'?: ProductModel.CurrencyEnum;
    /**
    * 商品詳細
    */
    'description'?: string;
    /**
    * 注文あたりの最大購入数量
    */
    'maxQuantity'?: number;
    /**
    * 販売価格
    */
    'price'?: number;
    /**
    * 数量別価格リスト
    */
    'priceByQuantityList'?: Array<PriceByQuantity>;
    /**
    * 商品コード
    */
    'productCode'?: string;
    /**
    * 商品説明ページ URL
    */
    'productInfoURL'?: string;
    /**
    * 商品名
    */
    'productName'?: string;
    /**
    * 商品種別
    */
    'productType'?: ProductModel.ProductTypeEnum;
    /**
    * 商品プロパティ
    */
    'properties'?: { [key: string]: string; };
    /**
    * 通常価格
    */
    'regularPrice'?: number;
    /**
    * 税込販売価格
    */
    'taxIncludedPrice'?: number;
    /**
    * 税込通常価格
    */
    'taxIncludedRegularPrice'?: number;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "campaignCode",
            "baseName": "campaignCode",
            "type": "string"
        },
        {
            "name": "consignorId",
            "baseName": "consignorId",
            "type": "string"
        },
        {
            "name": "consignorName",
            "baseName": "consignorName",
            "type": "string"
        },
        {
            "name": "count",
            "baseName": "count",
            "type": "number"
        },
        {
            "name": "currency",
            "baseName": "currency",
            "type": "ProductModel.CurrencyEnum"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "maxQuantity",
            "baseName": "maxQuantity",
            "type": "number"
        },
        {
            "name": "price",
            "baseName": "price",
            "type": "number"
        },
        {
            "name": "priceByQuantityList",
            "baseName": "priceByQuantityList",
            "type": "Array<PriceByQuantity>"
        },
        {
            "name": "productCode",
            "baseName": "productCode",
            "type": "string"
        },
        {
            "name": "productInfoURL",
            "baseName": "productInfoURL",
            "type": "string"
        },
        {
            "name": "productName",
            "baseName": "productName",
            "type": "string"
        },
        {
            "name": "productType",
            "baseName": "productType",
            "type": "ProductModel.ProductTypeEnum"
        },
        {
            "name": "properties",
            "baseName": "properties",
            "type": "{ [key: string]: string; }"
        },
        {
            "name": "regularPrice",
            "baseName": "regularPrice",
            "type": "number"
        },
        {
            "name": "taxIncludedPrice",
            "baseName": "taxIncludedPrice",
            "type": "number"
        },
        {
            "name": "taxIncludedRegularPrice",
            "baseName": "taxIncludedRegularPrice",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return ProductModel.attributeTypeMap;
    }
}

export namespace ProductModel {
    export enum CurrencyEnum {
        Jpy = <any> 'JPY',
        Usd = <any> 'USD',
        Eur = <any> 'EUR'
    }
    export enum ProductTypeEnum {
        Sim = <any> 'sim',
        Lora = <any> 'lora',
        Sigfox = <any> 'sigfox',
        NetworkModule = <any> 'network_module',
        Misc = <any> 'misc'
    }
}
