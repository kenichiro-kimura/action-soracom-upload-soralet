/**
 * SORACOM API
 * SORACOM API v1
 *
 * The version of the OpenAPI document: 20230427-035008
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ImeiLock } from './imeiLock';
import { LocationRegistrationStatus } from './locationRegistrationStatus';
import { PreviousSessionStatus } from './previousSessionStatus';
import { SessionStatus } from './sessionStatus';

export class Subscriber {
    /**
    * IoT SIM で使用可能な APN (アクセスポイント名)
    */
    'apn'?: string;
    'bundles'?: Array<string>;
    /**
    * このサブスクリプションが作成された UNIX 時間 (ミリ秒)。たとえば、セカンダリサブスクリプションの場合は、セカンダリサブスクリプションが作成された UNIX 時間 (ミリ秒) です。
    */
    'createdAt'?: number;
    /**
    * IoT SIM の有効期限 (UNIX 時間 (ミリ秒))
    */
    'expiredAt'?: number;
    /**
    * 有効期限が切れたときのアクション。詳しくは、[IoT SIM の有効期限とアクションを設定する](/ja-jp/docs/air/set-expiry/) を参照してください。  - `doNothing`: 保留 - `deleteSession`: セッション切断 - `deactivate`: 休止 - `suspend`: 利用中断 - `terminate`: 解約 - `null`: 有効期限が設定されていない 
    */
    'expiryAction'?: Subscriber.ExpiryActionEnum;
    /**
    * IoT SIM の有効期限 (UNIX 時間 (ミリ秒))
    */
    'expiryTime'?: number;
    /**
    * IoT SIM が所属するグループの ID
    */
    'groupId'?: string;
    /**
    * IoT SIM の ICCID
    */
    'iccid'?: string;
    'imeiLock'?: ImeiLock;
    /**
    * IoT SIM の IMSI
    */
    'imsi'?: string;
    'ipAddress'?: string;
    /**
    * IoT SIM の情報が変更された UNIX 時間 (ミリ秒)
    */
    'lastModifiedAt'?: number;
    /**
    * IoT SIM で Napter が利用された UNIX 時間 (ミリ秒)。 IoT SIM で一度も Napter を利用したことがなければ null です。
    */
    'lastPortMappingCreatedTime'?: number;
    'locationRegistrationStatus'?: LocationRegistrationStatus;
    /**
    * IoT SIM の形状 (フォームファクタ)  - `mini`: 標準 (2FF) サイズ - `micro`: マイクロ (3FF) サイズ - `nano`: ナノ (4FF) サイズ - `trio`: 3 in 1 (切り取りかた次第で 2FF/3FF/4FF いずれのサイズにもできる) - `embedded`: チップ型 (MFF2 とも呼ばれる組込み型 (eSIM)) - `virtual`: バーチャル SIM/Subscriber - `null`: セカンダリサブスクリプションの場合は null 
    */
    'moduleType'?: Subscriber.ModuleTypeEnum;
    /**
    * IoT SIM の MSISDN
    */
    'msisdn'?: string;
    /**
    * IoT SIM を所有しているオペレーターのオペレーター ID
    */
    'operatorId'?: string;
    /**
    * SMS 機能を有しているかどうか。  - `0`: SMS 未対応 - `1`: SMS 対応 
    */
    'plan'?: number;
    'previousSession'?: PreviousSessionStatus;
    /**
    * IoT SIM が手動でオペレーターに登録された UNIX 時間 (ミリ秒)。ユーザーコンソールから IoT SIM を購入し、自動的に登録された場合はこのフィールドは存在しません。
    */
    'registeredTime'?: number;
    /**
    * IoT SIM のステータスが「準備完了 (ready)」、「利用開始待ち (standby)」、「利用中断中 (suspended)」のいずれかになった UNIX 時間 (ミリ秒)
    */
    'renewalFeeStatusSetTime'?: number;
    /**
    * IoT SIM のシリアル番号。バーチャル SIM/Subscriber にはシリアル番号はありません。
    */
    'serialNumber'?: string;
    'sessionStatus'?: SessionStatus;
    /**
    * IoT SIM の SIM ID
    */
    'simId'?: string;
    /**
    * IoT SIM の速度クラス
    */
    'speedClass'?: string;
    /**
    * IoT SIM (IoT SIM のプライマリサブスクリプション) のステータス。なお、IoT SIM に追加されたバーチャル SIM/Subscriber のステータスは、`active` または `terminated` です。  - `ready`: 準備完了 (ready) - `active`: 使用中 (active) - `inactive`: 休止中 (inactive) - `standby`: 利用開始待ち (standby) - `suspended`: 利用中断中 (suspended) - `terminated`: 解約済み (terminated) 
    */
    'status'?: Subscriber.StatusEnum;
    /**
    * IoT SIM のサブスクリプションの名前
    */
    'subscription'?: string;
    /**
    * An object which always contains at least one property \"name\" with a string value. If you give a subscriber/SIM a name, the name will be returned as the value of the \"name\" property. If the subscriber/SIM does not have a name, an empty string \"\" is returned. In addition, if you create any custom tags for the subscriber/SIM, each custom tag will appear as additional properties in the object.
    */
    'tags'?: { [key: string]: string; };
    /**
    * IoT SIM の解約プロテクションの設定  - `true`: 解約プロテクション OFF (解約できる) - `false`: 解約プロテクション ON 
    */
    'terminationEnabled'?: boolean;
    /**
    * IoT SIM の速度クラス
    */
    'type'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "apn",
            "baseName": "apn",
            "type": "string"
        },
        {
            "name": "bundles",
            "baseName": "bundles",
            "type": "Array<string>"
        },
        {
            "name": "createdAt",
            "baseName": "createdAt",
            "type": "number"
        },
        {
            "name": "expiredAt",
            "baseName": "expiredAt",
            "type": "number"
        },
        {
            "name": "expiryAction",
            "baseName": "expiryAction",
            "type": "Subscriber.ExpiryActionEnum"
        },
        {
            "name": "expiryTime",
            "baseName": "expiryTime",
            "type": "number"
        },
        {
            "name": "groupId",
            "baseName": "groupId",
            "type": "string"
        },
        {
            "name": "iccid",
            "baseName": "iccid",
            "type": "string"
        },
        {
            "name": "imeiLock",
            "baseName": "imeiLock",
            "type": "ImeiLock"
        },
        {
            "name": "imsi",
            "baseName": "imsi",
            "type": "string"
        },
        {
            "name": "ipAddress",
            "baseName": "ipAddress",
            "type": "string"
        },
        {
            "name": "lastModifiedAt",
            "baseName": "lastModifiedAt",
            "type": "number"
        },
        {
            "name": "lastPortMappingCreatedTime",
            "baseName": "lastPortMappingCreatedTime",
            "type": "number"
        },
        {
            "name": "locationRegistrationStatus",
            "baseName": "locationRegistrationStatus",
            "type": "LocationRegistrationStatus"
        },
        {
            "name": "moduleType",
            "baseName": "moduleType",
            "type": "Subscriber.ModuleTypeEnum"
        },
        {
            "name": "msisdn",
            "baseName": "msisdn",
            "type": "string"
        },
        {
            "name": "operatorId",
            "baseName": "operatorId",
            "type": "string"
        },
        {
            "name": "plan",
            "baseName": "plan",
            "type": "number"
        },
        {
            "name": "previousSession",
            "baseName": "previousSession",
            "type": "PreviousSessionStatus"
        },
        {
            "name": "registeredTime",
            "baseName": "registeredTime",
            "type": "number"
        },
        {
            "name": "renewalFeeStatusSetTime",
            "baseName": "renewalFeeStatusSetTime",
            "type": "number"
        },
        {
            "name": "serialNumber",
            "baseName": "serialNumber",
            "type": "string"
        },
        {
            "name": "sessionStatus",
            "baseName": "sessionStatus",
            "type": "SessionStatus"
        },
        {
            "name": "simId",
            "baseName": "simId",
            "type": "string"
        },
        {
            "name": "speedClass",
            "baseName": "speedClass",
            "type": "string"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "Subscriber.StatusEnum"
        },
        {
            "name": "subscription",
            "baseName": "subscription",
            "type": "string"
        },
        {
            "name": "tags",
            "baseName": "tags",
            "type": "{ [key: string]: string; }"
        },
        {
            "name": "terminationEnabled",
            "baseName": "terminationEnabled",
            "type": "boolean"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return Subscriber.attributeTypeMap;
    }
}

export namespace Subscriber {
    export enum ExpiryActionEnum {
        DoNothing = <any> 'doNothing',
        DeleteSession = <any> 'deleteSession',
        Deactivate = <any> 'deactivate',
        Suspend = <any> 'suspend',
        Terminate = <any> 'terminate',
        NullValue = <any> '(null value)'
    }
    export enum ModuleTypeEnum {
        Mini = <any> 'mini',
        Micro = <any> 'micro',
        Nano = <any> 'nano',
        Trio = <any> 'trio',
        Embedded = <any> 'embedded',
        Virtual = <any> 'virtual',
        NullValue = <any> '(null value)'
    }
    export enum StatusEnum {
        Ready = <any> 'ready',
        Active = <any> 'active',
        Inactive = <any> 'inactive',
        Standby = <any> 'standby',
        Suspended = <any> 'suspended',
        Terminated = <any> 'terminated'
    }
}
